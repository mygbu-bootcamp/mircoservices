from django.db import models

class Program(models.Model):
    department_id = models.IntegerField()
    program_name = models.CharField(max_length=255)
    program_code = models.CharField(max_length=20, unique=True)
    program_type = models.CharField(max_length=50)
    degree_type = models.CharField(max_length=50)
    duration_semesters = models.IntegerField()
    total_credits = models.IntegerField()
    eligibility_criteria = models.DecimalField(max_digits=5, decimal_places=2)
    admission_requirements = models.JSONField()
    curriculum_structure = models.JSONField()
    accreditation = models.CharField(max_length=255)
    is_active = models.BooleanField(default=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class Semester(models.Model):
    program = models.ForeignKey(Program, on_delete=models.CASCADE, related_name='semesters')
    semester_number = models.IntegerField()
    semester_name = models.CharField(max_length=100)
    duration_months = models.IntegerField()
    min_credits = models.IntegerField()
    max_credits = models.IntegerField()
    semester_structure = models.JSONField()
    academic_year = models.CharField(max_length=20)
    is_active = models.BooleanField(default=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class Course(models.Model):
    semester = models.ForeignKey(Semester, on_delete=models.CASCADE, related_name='courses')
    course_code = models.CharField(max_length=20, unique=True)
    course_name = models.CharField(max_length=255)
    course_type = models.CharField(max_length=50)
    theory_credits = models.IntegerField()
    practical_credits = models.IntegerField()
    total_credits = models.IntegerField()
    prerequisites = models.JSONField()
    learning_outcomes = models.JSONField()
    syllabus_url = models.URLField()
    is_elective = models.BooleanField(default=False)
    is_active = models.BooleanField(default=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class Subject(models.Model):
    course = models.ForeignKey(Course, on_delete=models.CASCADE, related_name='subjects')
    subject_code = models.CharField(max_length=20, unique=True)
    subject_name = models.CharField(max_length=255)
    subject_type = models.CharField(max_length=50)
    credits = models.IntegerField()
    theory_hours = models.IntegerField()
    practical_hours = models.IntegerField()
    syllabus_content = models.JSONField()
    reference_materials = models.JSONField()
    is_active = models.BooleanField(default=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class Lab(models.Model):
    course = models.ForeignKey(Course, on_delete=models.CASCADE, related_name='labs')
    lab_code = models.CharField(max_length=20, unique=True)
    lab_name = models.CharField(max_length=255)
    credits = models.IntegerField()
    practical_hours = models.IntegerField()
    equipment_required = models.JSONField()
    experiment_list = models.JSONField()
    lab_manual_url = models.URLField()
    is_active = models.BooleanField(default=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
