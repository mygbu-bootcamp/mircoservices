from django.db import models
from django.contrib.postgres.fields import JSONField

class ExaminationSchedule(models.Model):
    exam_schedule_id = models.AutoField(primary_key=True)
    semester_id = models.IntegerField()
    exam_type = models.CharField(max_length=255)
    academic_year = models.CharField(max_length=20)
    start_date = models.DateField()
    end_date = models.DateField()
    status = models.CharField(max_length=50)
    exam_rules = models.JSONField()
    time_table = models.JSONField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class CourseExamination(models.Model):
    course_exam_id = models.AutoField(primary_key=True)
    exam_schedule = models.ForeignKey(ExaminationSchedule, on_delete=models.CASCADE, related_name='course_exams')
    course_id = models.IntegerField()
    subject_id = models.IntegerField()
    lab_id = models.IntegerField(null=True, blank=True)
    exam_date = models.DateField()
    start_time = models.TimeField()
    end_time = models.TimeField()
    exam_type = models.CharField(max_length=255)
    max_marks = models.DecimalField(max_digits=5, decimal_places=2)
    duration_minutes = models.IntegerField()
    venue = models.CharField(max_length=255)
    invigilators = models.JSONField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class ExamResult(models.Model):
    result_id = models.AutoField(primary_key=True)
    student_id = models.IntegerField()
    course_exam = models.ForeignKey(CourseExamination, on_delete=models.CASCADE, related_name='results')
    theory_marks = models.DecimalField(max_digits=5, decimal_places=2)
    practical_marks = models.DecimalField(max_digits=5, decimal_places=2)
    internal_marks = models.DecimalField(max_digits=5, decimal_places=2)
    total_marks = models.DecimalField(max_digits=6, decimal_places=2)
    max_marks = models.DecimalField(max_digits=6, decimal_places=2)
    grade = models.CharField(max_length=5)
    grade_points = models.DecimalField(max_digits=4, decimal_places=2)
    result_status = models.CharField(max_length=50)
    result_date = models.DateTimeField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class SemesterResult(models.Model):
    semester_result_id = models.AutoField(primary_key=True)
    student_id = models.IntegerField()
    semester_id = models.IntegerField()
    academic_year = models.CharField(max_length=20)
    semester_credits = models.DecimalField(max_digits=4, decimal_places=2)
    grade_points_earned = models.DecimalField(max_digits=4, decimal_places=2)
    sgpa = models.DecimalField(max_digits=4, decimal_places=2)
    cgpa = models.DecimalField(max_digits=4, decimal_places=2)
    result_status = models.CharField(max_length=50)
    declared_date = models.DateTimeField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
